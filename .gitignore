# Byte-compiled / optimized / DLL files
# Bayt derlenmiş / optimize edilmiş / DLL dosyaları

__pycache__/
*.py[cod]
*$py.class

# C extensions
# C uzantıları
*.so

# Distribution / packaging
# Dağıtım / paketleme
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# PyInstaller
#  Genellikle bu dosyalar bir Python betiği tarafından bir şablondan yazılır,
#  PyInstaller exe dosyasını oluşturmadan önce, böylece tarih / diğer bilgileri içine ekler.
*.manifest
*.spec

# Installer logs
# Kurulum günlükleri
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
# Birim testi / kapsama raporları
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
# Çeviriler
*.mo
*.pot

# Django stuff:
# Django dosyaları
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
# Flask dosyaları
instance/
.webassets-cache

# Scrapy stuff:
# Scrapy dosyaları
.scrapy

# Sphinx documentation
# Sphinx belgeleri
docs/_build/

# PyBuilder
# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
# Jupyter Notebook
.ipynb_checkpoints

# IPython
# IPython
profile_default/
ipython_config.py

# pyenv
#   Bir kütüphane veya paket için, bu dosyaları yok saymak isteyebilirsiniz,
#   çünkü kodun birden fazla ortamda çalışması amaçlanmış olabilir; aksi takdirde, bunları sürüm kontrolüne dahil edin:
# .python-version

# pipenv
#   pypa/pipenv#598'e göre, Pipfile.lock dosyasını sürüm kontrolüne dahil etmek önerilir.
#   Ancak, işbirliği durumunda, platforma özgü bağımlılıkları veya platformlar arası desteği olmayan bağımlılıkları
#   içerebilir, pipenv bağımlılıkları çalışmayan veya tüm gerekli bağımlılıkları yüklemeyen bir şekilde yükleyebilir.
#Pipfile.lock

# UV
#   Pipfile.lock'a benzer şekilde, uv.lock dosyasını sürüm kontrolüne dahil etmek genellikle önerilir.
#   Bu, özellikle ikili paketler için yeniden üretilebilirliği sağlamak adına önerilir ve genellikle kütüphaneler için yok sayılır.
#uv.lock

# poetry
#   Pipfile.lock'a benzer şekilde, poetry.lock dosyasını sürüm kontrolüne dahil etmek genellikle önerilir.
#   Bu, özellikle ikili paketler için yeniden üretilebilirliği sağlamak adına önerilir ve genellikle kütüphaneler için yok sayılır.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Pipfile.lock'a benzer şekilde, pdm.lock dosyasını sürüm kontrolüne dahil etmek genellikle önerilir.
#pdm.lock
#   pdm, proje çapındaki yapılandırmaları .pdm.toml dosyasında saklar, ancak bunu sürüm kontrolüne dahil etmemeniz önerilir.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; örneğin github.com/David-OConnor/pyflow ve github.com/pdm-project/pdm tarafından kullanılan
# __pypackages__/

# Celery stuff
# Celery dosyaları
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
# SageMath ile işlenmiş dosyalar
*.sage.py

# Environments
# Ortamlar
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
# Spyder proje ayarları
.spyderproject
.spyproject

# Rope project settings
# Rope proje ayarları
.ropeproject

# mkdocs documentation
# mkdocs belgeleri
/site

# mypy
# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
# Pyre tür denetleyicisi
.pyre/

# pytype static type analyzer
# pytype statik tür analizörü
.pytype/

# Cython debug symbols
# Cython hata ayıklama simgeleri
cython_debug/

# PyCharm
# JetBrains'e özgü şablon, ayrı bir JetBrains.gitignore dosyasında korunmaktadır
#  ve burada bulunabilir: https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  ve bu dosya global gitignore'a eklenebilir ya da bu dosya ile birleştirilebilir. Daha "nükleer" bir seçenek için
#  (önerilmez) aşağıdakileri yorumdan çıkararak tüm idea klasörünü yok sayabilirsiniz.
#.idea/

# Ruff stuff:
# Ruff dosyaları:
.ruff_cache/

# PyPI configuration file
# PyPI yapılandırma dosyası
.pypirc
